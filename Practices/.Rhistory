size <- 100000
counter <- 0
for (i in rnorm(size)) {
if (i > -1 & i < 1) {
counter <- counter + 1
}
}
result <- (counter / size)
print(result)
movies <- read.csv(file.choose())
genres <- movies[movies$Genre %in% c("action", "adventure", "animation", "comedy", "drama"),]
studios <- genres[genres$Studio %in% c("Buena Vista Studios", "Fox", "Paramount Pictures", "Sony", "Universal", "WB"),]
library(extrafont)
loadfonts(device = "win")
library(ggplot2)
plot <- ggplot(data = studios, aes(x = Genre, y=Gross...US))
View(plot)
plot
plot + geom_boxplot()
p <- plot + geom_jitter() + geom_boxplot()
p
p2 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot()
p2
p3 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot(outlier.colour = NA)
p3
p4 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot(alpha=0.6, outlier.colour = NA)
p4
p4 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot(alpha=0.6, outlier.colour = NA)
p4
p5 <- p4 +xlab("Genre") + ylab("Gross % US") + ggtitle("Domestic Gross % by Genre") + theme(plot.title = element_text(hjust = 0.5))
p5
p6 <- p5 + theme(axis.title.x = element_text(color = "blue", size = 20), axis.title.y = element_text(color = "blue", size = 20),
axis.text.x  = element_text(size = 10), axis.text.y  = element_text(size = 10),
plot.title   = element_text(size = 15), legend.title = element_text(size = 15),
text = element_text(family = "Courier"))
p6
p6$labels$size <- "Budget $M"
p6$labels$colour <- "Studio's"
p6
movies <- read.csv(file.choose())
# We lookup for the csv file in this line
movies <- read.csv(file.choose())
movies <- read.csv(file.choose())
movies <- read.csv(file.choose())
movies <- read.csv(file.choose())
movies <- read.csv(file.choose())
genres <- movies[movies$Genre %in% c("action", "adventure", "animation", "comedy", "drama"),]
studios <- genres[genres$Studio %in% c("Buena Vista Studios", "Fox", "Paramount Pictures", "Sony", "Universal", "WB"),]
library(extrafont)
loadfonts(device = "win")
library(ggplot2)
plot <- ggplot(data = studios, aes(x = Genre, y=Gross...US))
plot + geom_boxplot()
p <- plot + geom_jitter() + geom_boxplot()
p
p2 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot()
p2
p3 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot(outlier.colour = NA)
p3
p6 <- p5 + theme(axis.title.x = element_text(color = "blue", size = 20), axis.title.y = element_text(color = "blue", size = 20),
axis.text.x  = element_text(size = 10), axis.text.y  = element_text(size = 10),
plot.title   = element_text(size = 15), legend.title = element_text(size = 15),
text = element_text(family = "Courier"))
p6
# Labels and titles added to the graph so there is some context added to it.
p5 <- p4 +xlab("Genre") + ylab("Gross % US") + ggtitle("Domestic Gross % by Genre") + theme(plot.title = element_text(hjust = 0.5))
p5
p6 <- p5 + theme(axis.title.x = element_text(color = "blue", size = 20), axis.title.y = element_text(color = "blue", size = 20),
axis.text.x  = element_text(size = 10), axis.text.y  = element_text(size = 10),
plot.title   = element_text(size = 15), legend.title = element_text(size = 15),
text = element_text(family = "Courier"))
p6
p3 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot(outlier.colour = NA)
p3
p4 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot(alpha=0.6, outlier.colour = NA)
p4
p5 <- p4 +xlab("Genre") + ylab("Gross % US") + ggtitle("Domestic Gross % by Genre") + theme(plot.title = element_text(hjust = 0.5))
p5
p6 <- p5 + theme(axis.title.x = element_text(color = "blue", size = 20), axis.title.y = element_text(color = "blue", size = 20),
axis.text.x  = element_text(size = 10), axis.text.y  = element_text(size = 10),
plot.title   = element_text(size = 15), legend.title = element_text(size = 15),
text = element_text(family = "Courier"))
p6
p6$labels$size <- "Budget $M"
p6$labels$colour <- "Studio's"
p6
movies <- read.csv(file.choose())
genres <- movies[movies$Genre %in% c("action", "adventure", "animation", "comedy", "drama"),]
studios <- genres[genres$Studio %in% c("Buena Vista Studios", "Fox", "Paramount Pictures", "Sony", "Universal", "WB"),]
library(extrafont)
loadfonts(device = "win")
library(ggplot2)
plot <- ggplot(data = studios, aes(x = Genre, y=Gross...US))
plot + geom_boxplot()
p <- plot + geom_jitter() + geom_boxplot()
p
p2 <- plot + geom_jitter(aes(size = Budget...mill., color=Studio)) + geom_boxplot()
p2
getwd()
setwd("/home/chris/Documents/itt/Enero_Junio_2020/Mineria_de_datos/DataMining/MachineLearning/MultipleLinearRegression")
getwd()
dataset <- read.csv('50_Startups.csv')
dataset <- read.csv('50_Startups.csv')
dataset <- read.csv('50_Startups.csv')
dataset <- read.csv('50_Startups.csv')
getwd()
setwd("C:\Users\Julio\DataMining\Practices")
getwd()
getwd()
setwd("\Users\Julio\DataMining\Practices")
getwd()
getwd()
setwd("/Users/Julio/DataMining/Practices")
getwd()
dataset <- read.csv('50_Startups.csv')
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1,2,3))
dataset
library(caTools)
set.seed(123)
split <- sample.split(dataset$Profit, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
library(caTools)
Install.packages('caTools')
install.packages('caTools')
library(caTools)
set.seed(123)
split <- sample.split(dataset$Profit, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
training_set
test_set
regressor = lm(formula = Profit ~ .,
data = training_set )
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset )
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset )
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset )
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset )
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
backwardElimination <- function(x, sl) {
numVars = length(x)
for (i in c(1:numVars)){
regressor = lm(formula = Profit ~ ., data = x)
maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
if (maxVar > sl){
j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
x = x[, -j]
}
numVars = numVars - 1
}
return(summary(regressor))
}
SL = 0.05
training_set
backwardElimination(training_set, SL)
dataset
SL = 0.05
#dataset = dataset[, c(1,2,3,4,5)]
training_set
backwardElimination(training_set, SL)
training_set
backwardElimination(training_set, SL)
regressor = lm(formula = Profit ~ .,
data = training_set )
summary(regressor)
summary(regressor)
backwardElimination(training_set, SL)
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$R.D.Spend,
y=training_set$Profit),
color = 'red') +
geom_line(aes(x = training_set$R.D.Spend, y =
predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Training Set)') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x=training_set$R.D.Spend,
y=training_set$State),
color = 'red') +
geom_line(aes(x = training_set$R.D.Spend, y =
predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Training Set)') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x=training_set$R.D.Spend,
y=training_set$Marketing.Spend),
color = 'red') +
geom_line(aes(x = training_set$R.D.Spend, y =
predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Training Set)') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x=training_set$R.D.Spend,
y=training_set$Administration),
color = 'red') +
geom_line(aes(x = training_set$R.D.Spend, y =
predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Training Set)') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x=training_set$R.D.Spend,
y=training_set$Profit),
color = 'red') +
geom_line(aes(x = training_set$R.D.Spend, y =
predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Training Set)') +
xlab('R.D.Spend') +
ylab('Profit')
y_pred = predict(regressor, newdata = test_set)
y_pred
ggplot() +
geom_point(aes(x=test_set$R.D.Spend,
y=test_set$Profit),
color = 'red') +
geom_line(aes(x = test_set$R.D.Spend, y =
predict(regressor, newdata = test_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Training Set)') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x=test_set$R.D.Spend,
y=test_set$Profit),
color = 'red') +
geom_line(aes(x = test_set$R.D.Spend, y =
predict(regressor, newdata = test_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Test Set)') +
xlab('R.D.Spend') +
ylab('Profit')
ggplot() +
geom_point(aes(x=training_set$R.D.Spend,
y=training_set$Profit),
color = 'red') +
geom_line(aes(x = training_set$R.D.Spend, y =
predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Training Set)') +
xlab('R.D.Spend') +
ylab('Profit')
# Test Data Set
ggplot() +
geom_point(aes(x=test_set$R.D.Spend,
y=test_set$Profit),
color = 'red') +
geom_line(aes(x = test_set$R.D.Spend, y =
predict(regressor, newdata = test_set)),
color = 'blue') +
ggtitle('R.D.Spend vs Profit (Test Set)') +
xlab('R.D.Spend') +
ylab('Profit')
backwardElimination(training_set, SL)
training_set
